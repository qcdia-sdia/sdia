version: '3'
services:


#  nginx:
#    image: nginx
#    depends_on:
#      - web
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#      - ./cert.pem:/etc/nginx/cert.pem
#      - ./privkey.pem:/etc/nginx/privkey.pem
#    ports:
#      - "80:80"
#      - "443:443"


#  mongo-express:
#    image: mongo-express
#    environment:
#    - ME_CONFIG_MONGODB_SERVER=mongo
#    - ME_CONFIG_MONGODB_PORT=27017
##      - ME_CONFIG_MONGODB_ENABLE_ADMIN=false
#    - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
##      - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_ROOT_USER}
##      - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_ROOT_PASSWORD}
##      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
##      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
#    depends_on:
#      - mongo
#    ports:
#      - "8082:8081"

  rabbit:
    restart: unless-stopped
    hostname: rabbit
    image: rabbitmq:3.8-management
    ports:
      - "5671-5672:5671-5672"
      - "15672:15672"
      - "4369:4369"
      - "15671:15671"

  mongo:
    restart: unless-stopped
    image: mongo:4
    ports:
      - "27017:27017"

#  orchestrator:
#    restart: unless-stopped
#    depends_on:
#      - rabbit
#      - mongo
#      - sure-tosca
#    image: qcdis/sdia-orchestrator:1.0.7
#    environment:
#      RABBITMQ_HOST: rabbit
#      MONGO_HOST: mongo
#      SURE_TOSCA_BASE_PATH: http://sure-tosca:8081/tosca-sure/1.0.0
#      CREDENTIAL_SECRET: ${CREDENTIAL_SECRET}
#    ports:
#      - "8080:8080"

  sure-tosca:
    restart: unless-stopped
    image:  qcdis/sure-tosca:1.0.2
    ports:
      - "8081:8081"

  planner:
    restart: unless-stopped
    depends_on:
      - rabbit
#      - sure-tosca
    image: qcdis/sdia-infrastructure-planner:1.0.4
    environment:
      RABBITMQ_HOST: rabbit


#  provisioner:
#    restart: unless-stopped
#    depends_on:
#      - rabbit
##      - sure-tosca
#    image: qcdis/sdia-provisioner:1.0.5
#    environment:
#      RABBITMQ_HOST: rabbit
#      SURE_TOSCA_BASE_PATH: http://sure-tosca:8081/tosca-sure/1.0.0
#      CREDENTIAL_SECRET: ${CREDENTIAL_SECRET}


#  deployer:
#    restart: unless-stopped
#    depends_on:
#      - rabbit
#      - sure-tosca
#    image: qcdis/sdia-deployer:1.0.7
#    environment:
#      RABBITMQ_HOST: rabbit
#      SURE_TOSCA_BASE_PATH: http://sure-tosca:8081/tosca-sure/1.0.0
#      AWX_USERNAME: admin
#      AWX_PASSWORD: password
#      AWX_BASE_PATH: https://awxweb:8052/api/v2
#      CREDENTIAL_SECRET: ${CREDENTIAL_SECRET}
#      DELETE_TEMPLATES_AFTER_EXECUTION: "False"

#  web:
#    image: ansible/awx:17.1.0
##    container_name: awx_web
#    depends_on:
#      - redis
#      - postgres
#    ports:
#      - "8052:8052"
##    hostname: awxweb
#    user: root
#    restart: unless-stopped
#    volumes:
#      - "./SECRET_KEY:/etc/tower/SECRET_KEY"
#      - "./environment.sh:/etc/tower/conf.d/environment.sh"
#      - "./credentials.py:/etc/tower/conf.d/credentials.py"
#      - "./awx_nginx.conf:/etc/nginx/nginx.conf:ro"
#      - ./settings.py:/etc/tower/settings.py
#      - ./awx_cert.pem:/etc/nginx/cert.pem
#      - ./awx_privkey.pem:/etc/nginx/privkey.pem

#  awx-task:
#    image: ansible/awx:17.1.0
##    container_name: awx-task
#    depends_on:
#      - redis
#      - web
#      - postgres
#    command: /usr/bin/launch_awx_task.sh
#    hostname: awx-task
#    user: root
#    restart: unless-stopped
#    volumes:
#      - "./SECRET_KEY:/etc/tower/SECRET_KEY"
#      - "./environment.sh:/etc/tower/conf.d/environment.sh"
#      - "./credentials.py:/etc/tower/conf.d/credentials.py"
#      - ./settings.py:/etc/tower/settings.py
#    environment:
#      SUPERVISOR_WEB_CONFIG_PATH: '/etc/supervisord.conf'
#
#  redis:
#    image: redis
##    container_name: awx_redis
#    restart: unless-stopped
#    command: ["/usr/local/etc/redis/redis.conf"]
#    volumes:
#      - "./redis.conf:/usr/local/etc/redis/redis.conf:ro"
#
#
#  postgres:
#    image: postgres:10
##    container_name: awx_postgres
#    restart: unless-stopped
#    environment:
#      POSTGRES_USER: awx
#      POSTGRES_PASSWORD: awxpass
#      POSTGRES_DB: awx