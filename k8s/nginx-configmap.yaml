apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: conf
data:
  htpasswd: |
    user:$aBv9ugd$AV7m5Jeg046jXaBxiZDs.
    
  nginx.conf: |
    worker_processes auto;

    events { 
    worker_connections 1024;
    use epoll;
    multi_accept on;
    }

    http {
    proxy_connect_timeout       1200;
    proxy_send_timeout          1200;
    proxy_read_timeout          1200;
    send_timeout                1200;
    
    tcp_nodelay on;

    proxy_http_version 1.1;

    upstream semaphore {
        server semaphore:3000;
    }
    

    server {
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        auth_basic           "User's Area";
        auth_basic_user_file /etc/nginx/htpasswd;
        
        listen 443 ssl;
        server_name  _;

        add_header Strict-Transport-Security "max-age=31536000" always;

        # SSL
        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/privkey.pem;

        
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
    
        
        client_max_body_size 0;
    
        
        chunked_transfer_encoding on;

        location / {
        add_header 'Access-Control-Allow-Origin' *;
        
        proxy_pass http://semaphore/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_buffering off;
        proxy_request_buffering off;
        }

        location /api/ws {
        add_header 'Access-Control-Allow-Origin' *;
        proxy_pass http://semaphore/api/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Origin "";
        }
        
        
        location /tosca-sure/1.0.0 {
        add_header 'Access-Control-Allow-Origin' *;
        proxy_pass http://sure-tosca:8081/tosca-sure/1.0.0;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_buffering off;
        proxy_request_buffering off;
        }    
        
        location /manager {      
        add_header 'Access-Control-Allow-Origin' *;
        proxy_pass http://manager:8080/manager;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_buffering off;
        proxy_request_buffering off;
        }
        
        location /swagger-ui.html {
        add_header 'Access-Control-Allow-Origin' *;
        proxy_pass http://manager:8080/swagger-ui.html;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_buffering off;
        proxy_request_buffering off;
        }
        
        location /mongo-express {
            proxy_pass		http://mongo-express:8082/mongo-express;
            proxy_set_header	Host		$host;
            proxy_set_header	X-Real_IP	$remote_addr;
        }
        
        
        location /rabbit {
            proxy_pass		http://rabbit:15672/#/queues;
            proxy_set_header	Host		$host;
            proxy_set_header	X-Real_IP	$remote_addr;
        }           
    }
    }    
    
  cert.pem: |
    -----BEGIN CERTIFICATE-----

    -----END CERTIFICATE-----


    
    
  privkey.pem: |
    -----BEGIN PRIVATE KEY-----

    -----END PRIVATE KEY-----    
    
